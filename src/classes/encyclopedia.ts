// src/classes/encyclopedia.ts
import { ReferenceItem } from './reference-item';

class Encyclopedia extends ReferenceItem {


  // конструктор для створення нового об'єкту
  constructor(
    id:number, 
	title:string, 
	year:number, 
	public edition:number
  ) {
    // викликаємо конструктор батьківського класу
    super(id, title, year);
	// ініціалізуємо додаткову властивість
    this.edition = edition;
  }
  
  // перевизначений метод printItem()
  override printItem(): void {
    // виклик методу батьківського класу
    super.printItem();
    // додатковий вивід інформації про видання
    console.log(`Edition: ${this.edition} (${this.year})`);
  }
  
  printCitation(): void {
    console.log(`${this.title} - ${this.year}`);
  }
}

export { Encyclopedia };

/*
static: 
  Застосовується до властивостей та методів класу, а не до їхніх екземплярів. 
  Статичні властивості та методи належать самому класу, а не його екземплярам.

private: 
  властивість або метод буде приватним у межах класу, 
  тобто вони не будуть доступні ззовні класу. 
  Це допомагає забезпечити ізоляцію та контроль доступу до внутрішніх деталей класу.

protected: 
  властивість або метод буде доступним у межах класу та його похідних класів. 
  Вони не будуть доступні ззовні класу.

override: 
 перевизначає метод у батьківському класі. 
 Це допомагає уникнути непорозумінь із компілятором і надає чітку індикацію, 
 що метод призначений для перевизначення.

public: (за умовчанням)
 ви можете використовувати властивості та методи класу без вказівки цього ключового слова. 
 Вказує, що елемент буде доступний ззовні класу.

readonly: 
  властивість може бути призначена лише один раз під час її ініціалізації. 
  Після ініціалізації властивість стає тільки для читання.

abstract: 
  Абстрактний клас не може бути інстанційований, 
  але може містити абстрактні методи, які повинні бути реалізовані в похідних класах.
*/
